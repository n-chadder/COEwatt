generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Testm {
  id    Int   @id @unique @default(autoincrement())
  Name String
}

model Application {
  id              Int      @id @unique(map: "sqlite_autoindex_Application_1") @default(autoincrement())
  Name            String
  Desc            String
  Owner           String
  Events          Event[] 
  Pages           Page[]
  LogInURL        String
  Username        String
  UsernameElement String
  Password        String
  PasswordElement String
}//TO_DO add submit button ID

model Page {
  id       Int      @id @unique(map: "sqlite_autoindex_Page_1") @default(autoincrement())
  URL      String
  Title    String?
  Action   String?
  NeedAuth Boolean
  Report   Report[]
  App     Application @relation(fields: [AppID], references: [id], onDelete: Cascade)
  AppID   Int
}

model Report {
  id       Int    @id @unique(map: "sqlite_autoindex_Report_1") @default(autoincrement())
  DataTime String
  PageId   Int
  Page     Page   @relation(fields: [PageId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([DataTime, PageId], map: "sqlite_autoindex_Report_2")
}

model Event {
  id       Int      @id @unique(map: "sqlite_autoindex_Event_1") @default(autoincrement())
  App      Application @relation(fields: [AppID], references: [id], onDelete: Cascade)
  AppID    Int
  Start    DateTime
  End      DateTime
  Notes    String
  Status   EventStatus @relation(fields: [StatusID], references: [id])
  StatusID Int   
}

// run 'npx prisma db seed' to apply the default values - this should be added to the .dockerfile
// Event has one EventStatus, One EventStatus can be referenced by many Events
model EventStatus {
  id      Int      @id @unique(map: "sqlite_autoindex_EventStatus_1") @default(autoincrement())
  Status  String
  Events  Event[]
}