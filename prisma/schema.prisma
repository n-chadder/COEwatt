generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model AppElement {
  id             Int              @id @default(autoincrement())
  elementName    String
  AppElementRole AppElementRole[]
}

model AppElementRole {
  id           Int        @id @unique(map: "sqlite_autoindex_AppElementRole_1") @default(autoincrement())
  RoleId       Int
  AppElementId Int
  AppElement   AppElement @relation(fields: [AppElementId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Role         Role       @relation(fields: [RoleId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([RoleId, AppElementId], map: "sqlite_autoindex_AppElementRole_2")
}

model Application {
  id      Int       @id @default(autoincrement())
  Name    String
  Desc    String
  Owner   Int
  User    User      @relation(fields: [Owner], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Version Version[]
}

model Page {
  id       Int      @id @unique(map: "sqlite_autoindex_Page_1") @default(autoincrement())
  AppVerId Int
  URL      String
  Title    String?
  Action   String?
  Auth     String?
  Version  Version  @relation(fields: [AppVerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Report   Report[]

  @@unique([AppVerId, URL], map: "sqlite_autoindex_Page_2")
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String           @unique(map: "sqlite_autoindex_Role_1")
  AppElementRole AppElementRole[]
  UserRole       UserRole[]
}

model Session {
  id       String   @id @default(uuid())
  userName String   @unique(map: "sqlite_autoindex_Session")
  roles    String
  expiry   DateTime
}

model User {
  id          Int           @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String
  password    String
  Application Application[]
  UserRole    UserRole[]

  @@unique([firstName, lastName, email], map: "sqlite_autoindex_User_2")
}

model UserRole {
  id     Int  @id @default(autoincrement())
  RoleId Int
  UserId Int
  Role   Role @relation(fields: [RoleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User   User @relation(fields: [UserId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Version {
  id          Int         @id @default(autoincrement())
  AppId       Int
  Version     String
  Page        Page[]
  Application Application @relation(fields: [AppId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Report {
  id       Int    @id @unique(map: "sqlite_autoindex_Report_1") @default(autoincrement())
  DataTime String
  PageId   Int
  Page     Page   @relation(fields: [PageId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([DataTime, PageId], map: "sqlite_autoindex_Report_2")
}
