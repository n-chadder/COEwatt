extends base.pug

block content
  h1(id="wb-cont" property="name") Test Runs
  table(id="testRunTable").table.table-bordered 

  div.mrgn-bttm-md
    button(type="button" id="prevButton").btn.btn-default.pull-left Previous
    button(type="button" id="nextButton").btn.btn-default.pull-right Next

  script. 
    const NumTableItems = 14;
    let currPage = 1;
    let testRunTable = document.getElementById("testRunTable");
    let prevButton = document.getElementById("prevButton");
    let nextButton = document.getElementById("nextButton");
    let testRuns = !{JSON.stringify(testRuns)};

    prevButton.addEventListener('click', loadNewerData);
    nextButton.addEventListener('click', loadOlderData);

    function loadNewerData() {
      if (currPage <= 1) {   return;   }
      currPage -= 1;
      updateButtonStatus();
      renderTable(currPage);
    }

    function loadOlderData() {
      if (currPage > Math.ceil(testRuns.length / NumTableItems)) {   return;   }
      currPage += 1;
      updateButtonStatus();
      renderTable(currPage);
    }

    function renderTable (pageNumber) {
      let startIndex = (pageNumber * NumTableItems) - NumTableItems;
      let endIndex = Math.min((startIndex + NumTableItems), testRuns.length);
      let thead = document.createElement('thead');
      let tr = document.createElement("tr");
      let th1 = document.createElement('th');
      let th2 = document.createElement('th');
      let th3 = document.createElement('th');
      let text1 = document.createTextNode("Application Name");
      let text2 = document.createTextNode("Time Completed");
      let text3 = document.createTextNode("");
      testRunTable.innerHTML = "";

      th1.appendChild(text1);
      th2.appendChild(text2);
      th3.appendChild(text3);

      tr.appendChild(th1);
      tr.appendChild(th2);
      tr.appendChild(th3);

      thead.appendChild(tr);
      testRunTable.appendChild(thead);

      for (let i = startIndex; i < endIndex; i++) {
        let newRow = testRunTable.insertRow();
        let newCell1 = newRow.insertCell();
        let newCell2 = newRow.insertCell();
        let newCell3 = newRow.insertCell();
        let a1 = document.createElement('a');
        a1.href = `/testrun/${testRuns[i].id}`;
        a1.textContent = 'View Details';

        newCell1.innerHTML = testRuns[i].App.Name;
        newCell2.innerHTML = testRuns[i].Created;
        newCell3.appendChild(a1);
      }
    }

    function updateButtonStatus() {
      if (currPage < (Math.ceil(testRuns.length / NumTableItems))) {
        nextButton.disabled = false;
      }
      else {
        nextButton.disabled = true;
      }
      if (currPage > 1) {
        prevButton.disabled = false;
      }
      else {
        prevButton.disabled = true;
      }
    }
    
    renderTable(currPage);
    updateButtonStatus();
