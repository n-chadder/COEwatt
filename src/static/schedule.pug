extends base.pug

block content
  include messages.pug
  //- for some reason the css of the modal gets messed up when the modal div is added
  //- before the calendar div...
  div(id='calendar').mrgn-bttm-md.mrgn-tp-md  
  div(id="addEvent")
    pp-modal(dataurl="/schedule", id="modal", buttonDisplay="none")
      span(slot="buttonText") Add Event
      p(slot="header") Schedule Event
      span(slot="formContent")
        form(id="addSceduleEventForm", action="/events", method="post")
          div.form-group
            label(for="Title") Event Title 
            br
            input(type="text", id="Title", placeholder="Enter event title", style="width: 100%;", name="Title", required).form-control 
          div.form-group
            label(for="start") Event start date 
            br
            input(type="date", id="start", style="width: 100%;", name="Start", min="2018-01-01", max="2050-01-01", required).form-control
          div.form-group
            label(for="end") Event end date 
            br
            input(type="date", id="end", style="width: 100%;", name="End", min="2018-01-01", max="2050-01-01", required).form-control
          div.form-group
            label(for="notes") Notes
            br 
            textarea(type="text", id="notes", placeholder="Any notes about the event", style="width: 100%;", name="Notes").form-control
          div(style="padding-top: 10px").form-group.AddEventButtonDiv
            button(type="submit" style).btn.btn-success.mrgn-rght-sm Save

  div(id="editEvent")
    pp-modal(dataurl="/schedule", id="editModal", buttonDisplay="none")
      span(slot="buttonText") Edit Event
      p(slot="header") Edit Event
      span(slot="formContent")
        form(id="editSceduleEventForm", action="/events", method="post")
          div.form-group
            label(for="Title") Event Title 
            br
            input(type="text", id="editTitle", placeholder="Enter event title", style="width: 100%;", name="Title", required).form-control 
          div.form-group
            label(for="start") Event start date 
            br
            input(type="date", id="editStart", style="width: 100%;", name="Start", min="2018-01-01", max="2050-01-01", required).form-control
          div.form-group
            label(for="end") Event end date 
            br
            input(type="date", id="editEnd", style="width: 100%;", name="End", min="2018-01-01", max="2050-01-01", required).form-control
          div.form-group
            label(for="Desc") Notes
            br 
            textarea(type="text", id="editNotes", placeholder="Any notes about the event", style="width: 100%;", name="Notes").form-control
          div(style="padding-top: 10px").form-group.AddEventButtonDiv
            button(type="submit" style).btn.btn-success.mrgn-rght-sm Update

  block script 
    script(src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.4/index.global.min.js")
    script(type="text/javascript", src="../static/components/modal.js") 
    script(type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js")
    script(nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js")

  script. 
    let modal = document.getElementById("modal");
    let editModal = document.getElementById("editModal");
    // Arrow functions doesnt work on IE
    fetch('/events')
      .then(function(response){ return response.json(); })
      .then(function(data){
        // fullcalendar requires the following object keys to be lowercase:
        // "start", "end", "title". In the coe database the first letter of  
        // each of these object keys are in upper case, so the loop below 
        // creates a new array with the object keys properly parsed.
        // 'T00:00:00.000Z' is replaced from the time because fullcalendar
        // tries to convert UTC time to local time, which seems to bring more
        // complications than necessary as we are not worried about exact times
        // we really just care about the dates here.
        // 'T23:59:59' is added to the end date because the fullcalendar event
        // will not cover the end date without it. Ex/ if the end date 
        // is May 02, the event will only span up to May 01, it wont span May 02.
        let parsedData = [];
        for (let i = 0; i < data.length; i++) {
          let currEvent = { 
            id: data[i].id, 
            "title": data[i].Title,
            "start": data[i].Start.replace('T00:00:00.000Z', ''),
            "end":   data[i].End.replace('T00:00:00.000Z', 'T23:59:59'),
            "notes": data[i].Notes
          };
          // if it is a single day event, then adding 'T23:59:59' messes it up
          if (currEvent.start == currEvent.end.replace('T23:59:59', '')) {
            currEvent.end = currEvent.end.replace('T23:59:59', '');
          }
          parsedData.push(currEvent);
        }
        
        document.addEventListener('DOMContentLoaded', function() {
          let calendarEl = document.getElementById('calendar');
          let calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            nextDayThreshold: '00:00:00',
            displayEventTime: false,
            events: parsedData,
            customButtons: {
              addEventButton: {
                text: "Add New Event",
                hint: "Add New Event",
                click: function() {
                  modal._showModal();
                } 
              }
            },
            headerToolbar: {
              right: 'addEventButton today prev,next'
            },
            eventClick: function(info) {
              document.getElementById("editSceduleEventForm").action = document.getElementById("editSceduleEventForm").action + `/${info.event.id}?_method=PATCH`;
              fetch(`/events/${info.event.id}`)
                .then(function(response){   return response.json();   })
                .then(function(data){   
                  document.getElementById("editTitle").value = data.Title; 
                  document.getElementById("editStart").value = data.Start.replace('T00:00:00.000Z', '');
                  document.getElementById("editEnd").value   = data.End.replace('T00:00:00.000Z', ''); 
                  document.getElementById("editNotes").value = data.Notes;
                  editModal._showModal();
                });
            }
          });
          calendar.render();
        });
      });
